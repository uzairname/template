name: 'Provision Supabase Project'

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'The name for the new Supabase project.'
        required: true
        default: 'project'
      region:
        description: 'The region for the Supabase project.'
        required: true
        default: 'us-east-1'

jobs:
  supabase:
    runs-on: ubuntu-latest
    
    # Grant permission to write secrets to the repository
    permissions:
      actions: write
      contents: read

    # Pass Supabase credentials to all steps in this job
    env:
      SUPABASE_BEARER_TOKEN: ${{ secrets.SUPABASE_BEARER_TOKEN }}
      SUPABASE_ORG_ID: ${{ secrets.SUPABASE_ORG_ID }}
      # Pass existing secrets to the script. They will be empty strings if not set.
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_PUBLISHABLE_KEY: ${{ secrets.SUPABASE_PUBLISHABLE_KEY }}
      SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: 'Create Supabase Project'
        id: provision_supabase
        run: |
          {
            echo 'json_output<<EOF'
            node supabase.js --name "${{ github.event.inputs.project_name }}" --region "${{ github.event.inputs.region }}"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: 'Update Secrets'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_FOR_SECRETS }}
          JSON_OUTPUT: ${{ steps.provision_supabase.outputs.json_output }}
        run: |
          set -e -o pipefail
          echo "$JSON_OUTPUT" | jq -r 'to_entries| .[] | .key + " " + .value' | \
          while read key value; do
            echo "Setting secret: $key"
            gh secret set "$key" -b"$value"
          done
