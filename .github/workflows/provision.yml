name: 'Provision Resources'

on:
  workflow_dispatch:
    inputs:
      environment:
        required: false
        default: 'production'

env:
  PROJECT_NAME: template
  ADMIN_BASE_URL: https://template-admin.5r.workers.dev
  LANDING_BASE_URL: https://template.5r.workers.dev
  BACKEND_BASE_URL: https://template-backend.5r.workers.dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      actions: write
    
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      #  1. PROVISION INFRASTRUCTURE WITH TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.1.7'
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan & Apply
        working-directory: ./terraform
        env:
          # These TF_VAR_ variables map to the 'variable' blocks in Terraform scripts
          TF_VAR_project_name: "${{ env.PROJECT_NAME }}"
          TF_VAR_supabase_bearer_token: "${{ secrets.SUPABASE_BEARER_TOKEN }}"
          TF_VAR_supabase_org_id: "${{ secrets.SUPABASE_ORG_ID }}"
          TF_VAR_cloudflare_api_token: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          TF_VAR_cloudflare_account_id: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          TF_VAR_base_url: "${{ env.ADMIN_BASE_URL }}"
          TF_VAR_sentry_auth_token: "${{ secrets.SENTRY_AUTH_TOKEN }}"
          TF_VAR_sentry_organization_slug: "${{ secrets.SENTRY_ORG_SLUG }}"
        run: |
          terraform plan
          terraform apply -auto-approve

      - name: Update Repository Variables
        working-directory: ./terraform
        env: 
          GH_TOKEN: ${{ secrets.GH_PAT_FOR_SECRETS }}
        run: |
          gh variable set SUPABASE_PUBLIC_URL --body "$(terraform output -raw supabase_public_url)"
          gh variable set SUPABASE_ANON_KEY --body "$(terraform output -raw supabase_anon_key)"

      - name: Update Repository Secrets
        working-directory: ./terraform
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_FOR_SECRETS }}
        run: |
          gh secret set SUPABASE_SERVICE_ROLE_KEY --body "$(terraform output -raw supabase_service_role_key)"
          gh secret set SUPABASE_DB_PASSWORD --body "$(terraform output -raw supabase_db_password)"
          gh secret set POSTGRES_URI --body "$(terraform output -raw postgres_uri)"

      - name: Set Individual Cloudflare Worker Secrets
        working-directory: ./terraform
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "$(terraform output -raw sentry_dsn_backend_public)" | npx wrangler secret put SENTRY_DSN_PUBLIC --name "${{ env.PROJECT_NAME }}-backend"
          echo "$(terraform output -raw sentry_dsn_admin_public)" | npx wrangler secret put SENTRY_DSN_PUBLIC --name "${{ env.PROJECT_NAME }}-admin"
          echo "$(terraform output -raw sentry_dsn_landing_public)" | npx wrangler secret put SENTRY_DSN_PUBLIC --name "${{ env.PROJECT_NAME }}-landing"


  cloudflare-secrets:
    strategy:
      matrix:
        app: ["backend", "landing", "admin"]
    runs-on: ubuntu-latest
    needs: terraform
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Publish Secrets to Cloudflare Worker
        run: |
          WORKER_NAME="${{ env.PROJECT_NAME }}-${{ matrix.app }}"
          echo "Uploading secrets to worker: $WORKER_NAME"

          echo "${{ vars.SUPABASE_PUBLIC_URL }}" | npx wrangler secret put SUPABASE_PUBLIC_URL --name $WORKER_NAME
          echo "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" | npx wrangler secret put SUPABASE_SERVICE_ROLE_KEY --name $WORKER_NAME
          echo "${{ secrets.SUPABASE_DB_PASSWORD }}" | npx wrangler secret put SUPABASE_DB_PASSWORD --name $WORKER_NAME
          echo "${{ secrets.POSTGRES_URI }}" | npx wrangler secret put POSTGRES_URI --name $WORKER_NAME
          echo "${{ secrets.APP_KEY }}" | npx wrangler secret put APP_KEY --name $WORKER_NAME
