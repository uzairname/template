name: Deploy to Cloudflare Workers

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Provision Resources"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if the provision workflow completed successfully
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    strategy:
      matrix:
        app: ["backend", "landing", "admin"]
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Database Migrations
        env:
          POSTGRES_URI: ${{ secrets.POSTGRES_URI }}
        run: |
          cd packages/db
          pnpm run migrate

      - name: Deploy Cloudflare Workers
        env:
          # These repository variables are set by the provision workflow
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.SUPABASE_PUBLIC_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_ENVIRONMENT: production
          # Set sentry DSN for each app
          NEXT_PUBLIC_SENTRY_DSN: ${{ vars[format('SENTRY_DSN_{0}_PUBLIC', matrix.app)] }}
        run: |
          cd apps/${{ matrix.app }}
          pnpm run deploy
