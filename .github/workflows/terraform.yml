name: "Sync Infrastructure"

on:
  workflow_dispatch:


jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: "Terraform Plan"
        working-directory: terraform/environments/production
        run: |
          terraform init
          terraform plan

      - name: "Terraform Apply"
        working-directory: terraform/environments/production
        run: terraform apply -auto-approve

  database:
    name: "Database Migrations"
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
      - run: pnpm install

      - name: "Run Migrations"
        working-directory: apps/api
        run: pnpm --filter @repo/db run migrate:prod
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: [terraform, database]
    strategy:
      matrix:
        package: [api, admin, landing]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
      - run: pnpm --filter @repo/${{ matrix.package }} run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}